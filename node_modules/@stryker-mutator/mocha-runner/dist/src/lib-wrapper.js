"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LibWrapper = void 0;
const tslib_1 = require("tslib");
const path_1 = (0, tslib_1.__importDefault)(require("path"));
const mocha_1 = (0, tslib_1.__importDefault)(require("mocha"));
const glob_1 = (0, tslib_1.__importDefault)(require("glob"));
const mochaRoot = path_1.default.dirname(require.resolve('mocha/package.json'));
let loadOptions;
let collectFiles;
let handleRequires;
let loadRootHooks;
try {
    /*
     * If read, object containing parsed arguments
     * @since 6.0.0'
     * @see https://mochajs.org/api/module-lib_cli_options.html#.loadOptions
     */
    // eslint-disable-next-line @typescript-eslint/no-require-imports
    loadOptions = require(`${mochaRoot}/lib/cli/options`).loadOptions;
}
catch {
    // Mocha < 6 doesn't support `loadOptions`
}
try {
    // https://github.com/mochajs/mocha/blob/master/lib/cli/run-helpers.js#L132
    // eslint-disable-next-line @typescript-eslint/no-require-imports
    const runHelpers = require(`${mochaRoot}/lib/cli/run-helpers`);
    collectFiles = runHelpers.handleFiles;
    handleRequires = runHelpers.handleRequires; // handleRequires is available since mocha v7.2
    loadRootHooks = runHelpers.loadRootHooks; // loadRootHooks is available since mocha v7.2
    if (!collectFiles) {
        // Might be moved: https://github.com/mochajs/mocha/commit/15b96afccaf508312445770e3af1c145d90b28c6#diff-39b692a81eb0c9f3614247af744ab4a8
        // eslint-disable-next-line @typescript-eslint/no-require-imports
        collectFiles = require(`${mochaRoot}/lib/cli/collect-files`);
    }
}
catch {
    // Mocha < 6 doesn't support `handleFiles`
}
/**
 * Wraps Mocha class and require for testability
 */
class LibWrapper {
}
exports.LibWrapper = LibWrapper;
LibWrapper.Mocha = mocha_1.default;
LibWrapper.require = require;
LibWrapper.glob = glob_1.default.sync;
LibWrapper.loadOptions = loadOptions;
LibWrapper.collectFiles = collectFiles;
LibWrapper.handleRequires = handleRequires;
LibWrapper.loadRootHooks = loadRootHooks;
//# sourceMappingURL=lib-wrapper.js.map